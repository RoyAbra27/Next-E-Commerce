datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

generator client {
    provider = "prisma-client-js"
}

model Shop {
    id          Int       @id @default(autoincrement())
    owner_id    String    @unique
    name        String
    description String
    active      Boolean   @default(true)
    products    Product[]
    orders      Order[]
    created_at  DateTime  @default(now())
    updated_at  DateTime  @updatedAt
    owner       User      @relation("ShopOwner", fields: [owner_id], references: [id])
    images     Image[]
}


model Product {
    id           Int            @id @default(autoincrement())
    shop_id      Int
    name         String
    description  String?
    categories   Category[]
    price        Float
    images       Image[]
    created_at   DateTime       @default(now())
    updated_at   DateTime       @updatedAt
    category_id  Int?
    orderDetails OrderDetails[]
    shop         Shop           @relation(fields: [shop_id], references: [id])
    active       Boolean        @default(true)

    @@index([shop_id])
    @@index([category_id])
}

model OrderDetails {
    id         Int     @id @default(autoincrement())
    order      Order   @relation(fields: [order_id], references: [id])
    product    Product @relation(fields: [product_id], references: [id])
    price      Float
    quantity   Float
    order_id   Int
    product_id Int

    @@index([product_id])
    @@index([order_id])
}

model User {
    id      String  @id @unique
    orders  Order[]
    shop    Shop?   @relation("ShopOwner")
    shop_id Int?
}

model Category {
    id       Int       @id @default(autoincrement())
    image_id Int?      @unique
    name     String
    image    Image?    @relation(fields: [image_id], references: [id])
    products Product[]
}

model Order {
    id           Int            @id @default(autoincrement())
    user_id      String
    shop_id      Int
    status       OrderStatus    @default(PENDING)
    total_amount Float
    created_at   DateTime       @default(now())
    updated_at   DateTime       @updatedAt
    user         User           @relation(fields: [user_id], references: [id])
    shop         Shop           @relation(fields: [shop_id], references: [id])
    orderDetails OrderDetails[]

    @@index([shop_id])
    @@index([user_id])
}

model Image {
    id         Int       @id @default(autoincrement())
    image_url  String
    created_at DateTime  @default(now())
    category   Category?
    product_id Int?
    product    Product?  @relation(fields: [product_id], references: [id])
    shop_id    Int?
    shop       Shop?     @relation(fields: [shop_id], references: [id])
    @@index([product_id])
    @@index([shop_id])
}

enum OrderStatus {
    PENDING
    SHIPPED
    DELIVERED
    CANCELED
}
